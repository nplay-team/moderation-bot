// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

///--- USER & PERMISSION MANAGEMENT ---///
model User {
  id             String   @id
  reports        Report[] @relation(name: "Report_User")
  createdReports Report[] @relation(name: "Report_Reporter")

  @@index([id])
  @@map("users")
}

model Permission {
  id         String @id @default(cuid())
  userId     String // user or role id
  permission Int    @default(0) // Bitwise permission
  guildId    String

  @@index([id, userId, guildId])
  @@map("permissions")
}

///--- REPORTS & MODERATION ---///
enum ReportAction {
  WARN
  TIMEOUT
  KICK
  TEMP_BAN
  BAN
}

model Paragraph {
  id      String   @id @default(cuid())
  name    String
  summary String
  content String
  guildId String
  reports Report[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([id, guildId])
  @@map("paragraphs")
}

model Report {
  id      String       @id @default(cuid())
  user    User         @relation(name: "Report_User", fields: [userId], references: [id])
  userId  String
  guildId String
  action  ReportAction

  reason      String
  paragraph   Paragraph? @relation(fields: [paragraphId], references: [id])
  paragraphId String?

  duration Int?
  delDays  Int?

  issuerId String
  issuer   User   @relation(name: "Report_Reporter", fields: [issuerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([id, userId, guildId])
  @@map("reports")
}
